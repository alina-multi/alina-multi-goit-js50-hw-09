{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIMC,GADOC,SAASC,cAAc,SACZD,SAASC,cAAc,sBACzCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBACrCG,EAAMJ,SAASC,cAAc,UAC/BI,EAAW,EA8Cf,SAASC,EAAcC,EAAUC,GAE/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAEvBL,EACFI,EAAQ,CAAEE,SAAAR,EAAUC,UAEpBM,EAAO,CAAEC,SAAAR,EAAUC,aArDzBJ,EAAIY,iBAAiB,SAErB,SAAkBC,GAChBA,EAAEC,iBACF,IAAMC,EAAapB,EAAgBqB,MAC7BC,EAAQnB,EAAUkB,MAClBE,EAASnB,EAAYiB,MAErBG,EAAYC,YAAW,WAI1BlB,EAFDD,GAAY,EAEagB,GAC1BI,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUP,EAAKkB,EAALlB,MACjBX,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANtB,EAAM,UACvDuB,OAAI,SAAAL,G,IAAGM,EAAQN,EAARX,SAAUP,EAAKkB,EAALlB,MACvBX,EAAA+B,OAAOK,QAAQ,sBAAuCH,OAAfE,EAAS,QAAYF,OAANtB,EAAM,UAI5D,IAAM0B,EAAaC,aAAY,WAI7B7B,EAFAD,GAAY,EAEYgB,GAC3BI,MAAK,SAAAC,G,IAAGU,EAAQV,EAARX,SAAUP,EAAKkB,EAALlB,MACjBX,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfM,EAAS,QAAYN,OAANtB,EAAM,UAE9DuB,OAAM,SAAAL,G,IAAGW,EAAQX,EAARX,SAAUP,EAAKkB,EAALlB,MAClBX,EAAA+B,OAAOK,QAAQ,sBAAqCH,OAAfO,EAAS,QAAYP,OAANtB,EAAM,UAGnDH,IAAaiC,OAAOhB,KACtBiB,cAAcL,GACdM,aAAajB,GACblB,EAAW,KAGbgB,KAEFF,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector(\".form\")\nconst inputFirstDelay = document.querySelector(\"input[name=delay]\")\nconst inputStep = document.querySelector(\"input[name=step]\")\nconst inputAmount = document.querySelector(\"input[name=amount]\")\nconst btn = document.querySelector(\"button\")\nlet position = 0;\n\nbtn.addEventListener(\"click\", onSubmit)\n\nfunction onSubmit(e) { \n  e.preventDefault();\n  const firstDelay = inputFirstDelay.value\n  const delay = inputStep.value\n  const amount = inputAmount.value\n \n  const timeoutID = setTimeout(() => {\n\n    position += 1;\n    \n     createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)})\n       .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n   \n  });\n\n    const indervalID = setInterval(() => {\n     \n      position += 1;\n     \n      createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n  });\n      \n       if (position === Number(amount)) {\n         clearInterval(indervalID);\n         clearTimeout(timeoutID);\n         position = 0;\n }\n\n    }, delay)\n   \n  }, firstDelay)\n\n}\n\nfunction createPromise(position, delay) {\n  \n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n\n    if (shouldResolve) {\n      resolve({ position, delay })\n    } else {\n      reject({ position, delay })\n    }\n    \n  });\n    \n};\n  \n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$inputFirstDelay","document","querySelector","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$btn","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$createPromise","position5","delay","shouldResolve","Math","random","Promise","resolve","reject","position","addEventListener","e","preventDefault","firstDelay","value","delay1","amount","timeoutID","setTimeout","then","param","position1","Notify","success","concat","catch","position2","failure","indervalID","setInterval","position3","position4","Number","clearInterval","clearTimeout"],"version":3,"file":"03-promises.063ef582.js.map"}