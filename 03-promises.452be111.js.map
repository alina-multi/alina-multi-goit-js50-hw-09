{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAApC,MACMC,EAAkBF,SAASC,cAAc,qBACzCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,sBACrCI,EAAML,SAASC,cAAc,UACnC,IAAIK,EAAW,EA8Cf,SAASC,EAAcC,EAAUC,GAE/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAEvBL,EACFI,EAAQ,CAAEE,SAAAR,E,MAAUC,IAEpBM,EAAO,CAAEC,SAAAR,E,MAAUC,OArDzBJ,EAAIY,iBAAiB,SAErB,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,EAAalB,EAAgBmB,MAC7BC,EAAQnB,EAAUkB,MAClBE,EAASnB,EAAYiB,MAErBG,EAAYC,YAAW,KAE3BnB,GAAY,EAEXC,EAAcD,EAAUgB,GAC1BI,MAAK,EAAGV,SAAAW,EAAQlB,MAAEA,MACjBX,EAAA8B,OAAOC,QAAQ,uBAAqBF,QAAiBlB,UAC/CqB,OAAI,EAAGd,SAAAe,EAAQtB,MAAEA,MACvBX,EAAA8B,OAAOI,QAAQ,sBAAoBD,QAAiBtB,UAIpD,MAAMwB,EAAaC,aAAY,KAE7B5B,GAAY,EAEZC,EAAcD,EAAUgB,GAC3BI,MAAK,EAAGV,SAAAmB,EAAQ1B,MAAEA,MACjBX,EAAA8B,OAAOC,QAAQ,uBAAqBM,QAAiB1B,UAEtDqB,OAAM,EAAGd,SAAAoB,EAAQ3B,MAAEA,MAClBX,EAAA8B,OAAOI,QAAQ,sBAAoBI,QAAe3B,UAG3CH,IAAa+B,OAAOd,KACtBe,cAAcL,GACdM,aAAaf,GACblB,EAAW,KAGbgB,KAEFF","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector(\".form\")\nconst inputFirstDelay = document.querySelector(\"input[name=delay]\")\nconst inputStep = document.querySelector(\"input[name=step]\")\nconst inputAmount = document.querySelector(\"input[name=amount]\")\nconst btn = document.querySelector(\"button\")\nlet position = 0;\n\nbtn.addEventListener(\"click\", onSubmit)\n\nfunction onSubmit(e) { \n  e.preventDefault();\n  const firstDelay = inputFirstDelay.value\n  const delay = inputStep.value\n  const amount = inputAmount.value\n \n  const timeoutID = setTimeout(() => {\n\n    position += 1;\n    \n     createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)})\n       .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n   \n  });\n\n    const indervalID = setInterval(() => {\n     \n      position += 1;\n     \n      createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n  });\n      \n       if (position === Number(amount)) {\n         clearInterval(indervalID);\n         clearTimeout(timeoutID);\n         position = 0;\n }\n\n    }, delay)\n   \n  }, firstDelay)\n\n}\n\nfunction createPromise(position, delay) {\n  \n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n\n    if (shouldResolve) {\n      resolve({ position, delay })\n    } else {\n      reject({ position, delay })\n    }\n    \n  });\n    \n};\n  \n\n"],"names":["$iQIUW","parcelRequire","document","querySelector","$47d4ff9957288465$var$inputFirstDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position5","delay","shouldResolve","Math","random","Promise","resolve","reject","position","addEventListener","e","preventDefault","firstDelay","value","delay1","amount","timeoutID","setTimeout","then","position1","Notify","success","catch","position2","failure","indervalID","setInterval","position3","position4","Number","clearInterval","clearTimeout"],"version":3,"file":"03-promises.452be111.js.map"}